#
# Copyright 2015-2018 Micro Focus or one of its affiliates.
#
# The only warranties for products and services of Micro Focus and its
# affiliates and licensors ("Micro Focus") are set forth in the express
# warranty statements accompanying such products and services. Nothing
# herein should be construed as constituting an additional warranty.
# Micro Focus shall not be liable for technical or editorial errors or
# omissions contained herein. The information contained herein is subject
# to change without notice.
#
# Contains Confidential Information. Except as specifically indicated
# otherwise, a valid license is required for possession, use or copying.
# Consistent with FAR 12.211 and 12.212, Commercial Computer Software,
# Computer Software Documentation, and Technical Data for Commercial
# Items are licensed to the U.S. Government under vendor's standard
# commercial license.
#

openapi: 3.0.0
info:
  version: 1.0.0
  title: CAF Staging Service APIs
  description: Highly resilient filesystem service to stage files.
tags:
  - name: Staging
    description: Staging Files Operations
paths:
  /status:
    get:
      tags:
        - Staging
      operationId: getStatus
      summary: Returns status information about the staging service. A client should use this to check that the service is functional before uploading a large batch.
      responses:
        "200":
          description: Service is functional and can accept batches for staging.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusResponse"
        "500":
          description: The request failed due to an unexpected server error.
  /batches:
    parameters:
      - in: query
        name: startsWith
        description: Specifies the prefix for batch identifier to fetch batches whose
          identifiers start with the specified value.
        schema:
          type: string
          minLength: 1
          maxLength: 256
      - in: query
        name: from
        description: Specifies the identifier to fetch batches that follow it
          alphabetically.
        schema:
          type: string
          minLength: 1
          maxLength: 256
      - in: query
        name: limit
        description: Specifies the number of results to return (defaults to 25 if not
          specified).
        schema:
          type: integer
          format: int32
          minimum: 1
          default: 25
    get:
      tags:
        - Staging
      operationId: getBatches
      summary: Retrieve the current list of batches in alphabetical order.
      responses:
        "200":
          description: Successfully retrieved batches.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchList"
        "500":
          description: The request failed due to an unexpected server error.
  "/batches/{batchId}":
    parameters:
      - in: path
        name: batchId
        description: Identifies the batch.
        required: true
        schema:
          type: string
          minLength: 1
    put:
      tags:
        - Staging
      operationId: addDocumentsToBatch
      summary: Add documents to a batch. The batch will be automatically created if it
        doesn't already exist.
      requestBody:
        content:
          multipart/mixed:
            schema:
              type: object
              properties:
                uploadData:
                  type: array
                  description: The documents that need to be uploaded.
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: Successfully added the documents to the batch.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchResponse"
        "400":
          description: The request could not be processed because one or more arguments are
            invalid.
        "500":
          description: The request failed due to an unexpected server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchError"
    delete:
      tags:
        - Staging
      operationId: deleteBatch
      summary: Delete specified batch.
      responses:
        "204":
          description: Successfully deleted the batch.
        "404":
          description: The batch does not exist.
        "500":
          description: The request failed due to an unexpected server error.
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/BatchError"

components:
  schemas:
    StatusResponse:
      title: StatusResponse
      description: Status of the service
      type: object
      properties:
        messgae:
          type: string
          description: Detailed status message
    BatchResponse:
      title: BatchResponse
      description: A list of documents that were staged
      type: object
      properties:
        entries:
          type: array
          description: List of documents that were staged
          items:
            type: string
            description: Details of documents that were staged
    BatchError:
      title: BatchError
      properties:
        code:
          type: string
          description: An error code
        messgae:
          type: string
          description: Detailed error message
    BatchList:
      title: BatchList
      description: A list of batches identifiers ordered alphabetically
      type: object
      properties:
        entries:
          type: array
          items:
            type: string
            description: The batch identifier