#
# Copyright 2019-2024 Open Text.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

debug: false
server:
  port: 8080
https:
  port: 8443
management:
  server:
    port: 8081
  endpoints:
    web:
      exposure:
        include: health, threaddump
      base-path: /
      path-mapping:
        health: healthcheck
        threaddump: threads
    jmx:
      exposure:
        exclude: "*"
  endpoint:
    health:
      show-details: ALWAYS
    info:
      enabled: false
  health:
    diskspace:
      path: ${CAF_STAGING_SERVICE_BASEPATH:/batches/}
      threshold: ${CAF_STAGING_SERVICE_DISK_SIZE_THRESHOLD:536870912}
# Spring does not support streaming multipart request bodies, so we must use commons-fileupload2 instead. To prevent Spring from reading
# the request body we are setting `spring.servlet.multipart.enabled=false` in the application.yaml
#
# See: https://stackoverflow.com/questions/32782026/springboot-large-streaming-file-upload-using-apache-commons-fileupload
#      https://stackoverflow.com/questions/37870989/spring-how-to-stream-large-multipart-file-uploads-to-database-without-storing
spring:
  servlet:
    multipart:
      enabled: false
  jackson:
    default-property-inclusion: non_null
staging:
    basePath: ${CAF_STAGING_SERVICE_BASEPATH:/batches/}
    subbatchSize: ${CAF_STAGING_SERVICE_SUBBATCH_SIZE:250}
    storagePath: ${CAF_STAGING_SERVICE_STORAGEPATH:/etc/store/batches/}
    # Default field value size limit is 8KB
    fieldValueSizeThreshold: ${CAF_STAGING_SERVICE_FIELDVALUE_SIZE_THRESHOLD:8192}
    fileAgeThreshold: ${CAF_STAGING_SERVICE_FILE_AGE_THRESHOLD:3600000}
    fileCleanUpInterval: ${CAF_STAGING_SERVICE_FILE_CLEAN_UP_INTERVAL:86400000}
    skipFileCleanUp: ${CAF_STAGING_SERVICE_SKIP_FILE_CLEANUP:false}
    healthcheckTimeoutSeconds: ${CAF_STAGING_SERVICE_HEALTHCHECK_TIMEOUT_SECONDS:10}
logging:
  level:
    ROOT: ${CAF_LOG_LEVEL:WARN}
    org.springframework: ${CAF_STAGING_SERVICE_SPRING_LOG_LEVEL:${CAF_LOG_LEVEL:WARN}}
    com.github.cafdataprocessing.services.staging: ${CAF_STAGING_SERVICE_LOG_LEVEL:${CAF_LOG_LEVEL:INFO}}
